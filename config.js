

exports.config = propertiesAndDirections;
exports.configOnArray = propertiesAndDirectionsSampleGenerator;
exports.parseQueryToArray = setConfigurationToArray;


//this gets an object like propertiesAndDirections and turns it into an array with
//the structure of the one sent by the function propertiesAndDirectionsSampleGenerator
function setConfigurationToArray(paramPropsAndDirs) {
	var propsNDirs = [];
	var props = paramPropsAndDirs;

	//runs through the properties in the queryString object and then gets its value, 
	//every property and directional value becomes a new object item in the array.
	//As for the direction property, it receives either 1 or 'asc' for ascending, and
	//any other value takes descending as argument
	for (k in props) {
		if (props.hasOwnProperty(k)) {

			var obj = {
				property  : k,
				direction : (props[k] == 1 || props[k] == 'asc') ? 'asc' : 'desc'
			};
			propsNDirs.push(obj); 
		}
	}
	return propsNDirs; 
}



//for testing with app.js only, and for sampling of the object generated by the http querystring parser to an object
var propertiesAndDirections = {
	title 	: 1,
	author 	: 1, 
	year 	: 1
}; 

//generator of a sample query for use with app.js, 
//play around at will, unexisting properties will be ignored and
//values of directions other than asc will have desc assumed as default
function propertiesAndDirectionsSampleGenerator () {
	return [
		{
			property  : "year",
			direction : "asc"
		},
		{
			property  : "author",
			direction : "asc"
		},
		{
			property  : "title",
			direction : "desc"
		}
	];
}

